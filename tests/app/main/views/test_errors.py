#!/usr/bin/env python
# coding: utf-8

# -----------------------------------------------------------------------------
# --- Typing ---
# -----------------------------------------------------------------------------
from typing import Any

# -----------------------------------------------------------------------------
# --- HTTP status ---
# -----------------------------------------------------------------------------
from http import HTTPStatus

# -----------------------------------------------------------------------------
# --- Pytest ---
# -----------------------------------------------------------------------------
import pytest


# -----------------------------------------------------------------------------
#  ______   ______     ______     ______   ______
# /\__  _\ /\  ___\   /\  ___\   /\__  _\ /\  ___\
# \/_/\ \/ \ \  __\   \ \___  \  \/_/\ \/ \ \___  \
#    \ \_\  \ \_____\  \/\_____\    \ \_\  \/\_____\
#     \/_/   \/_____/   \/_____/     \/_/   \/_____/
#
# -----------------------------------------------------------------------------
@pytest.mark.xfail(reason="Fails on GitHub CI", raises=Exception)
@pytest.mark.usefixtures("authenticated_admin_user")
def test_error_403(client: Any) -> None:
    # -------------------------------------------------------------------------
    # --- Act ---
    # -------------------------------------------------------------------------
    response = client.get('/test-403')

    # -------------------------------------------------------------------------
    # --- Asserts ---
    # -------------------------------------------------------------------------
    assert response.status_code == HTTPStatus.FORBIDDEN
    assert b"403" in response.data


@pytest.mark.usefixtures("authenticated_admin_user")
def test_error_404(client):
    # -------------------------------------------------------------------------
    # --- Act ---
    # -------------------------------------------------------------------------
    response = client.get('/non-existent-route')

    # -------------------------------------------------------------------------
    # --- Asserts ---
    # -------------------------------------------------------------------------
    assert response.status_code == HTTPStatus.NOT_FOUND
    assert b"404" in response.data


@pytest.mark.xfail(reason="Fails on GitHub CI", raises=Exception)
@pytest.mark.usefixtures("authenticated_admin_user")
def test_error_500(client):
    # -------------------------------------------------------------------------
    # --- Act ---
    # -------------------------------------------------------------------------
    response = client.get('/test-500')

    # -------------------------------------------------------------------------
    # --- Asserts ---
    # -------------------------------------------------------------------------
    assert response.status_code == HTTPStatus.INTERNAL_SERVER_ERROR
    assert b"500" in response.data


@pytest.mark.xfail(reason="Fails on GitHub CI", raises=Exception)
@pytest.mark.usefixtures("authenticated_admin_user")
def test_exception_handler(client):
    # -------------------------------------------------------------------------
    # --- Act ---
    # -------------------------------------------------------------------------
    response = client.get('/test-exception')

    # -------------------------------------------------------------------------
    # --- Asserts ---
    # -------------------------------------------------------------------------
    assert response.status_code == HTTPStatus.INTERNAL_SERVER_ERROR
    assert b"500" in response.data

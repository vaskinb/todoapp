name: Pylint

permissions:
  contents: write

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  pylint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          pip install pylint anybadge

      - name: Run pylint and save output
        run: |
          source venv/bin/activate
          pylint app --disable=missing-docstring,no-member | tee pylint.txt

      - name: Extract pylint score and generate badge
        run: |
          source venv/bin/activate
          SCORE=$(grep -oP '(?<=rated at )\d+(\.\d+)?' pylint.txt)
          echo "Pylint score: $SCORE"
          anybadge --label="pylint" --value="$SCORE/10" --file=pylint.svg
      
      - name: Commit and push badge to repo
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add pylint.svg
          git commit -m "Update pylint badge" || echo "No changes to commit"
          git push

      - name: Delete existing badge release (if exists)
        continue-on-error: true
        run: |
          gh release delete badge -y || true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create new badge release
        uses: ncipollo/release-action@v1
        with:
          tag: badge
          name: Badge Release
          body: 'Release for storing generated badges'
          draft: false
          prerelease: false
          allowUpdates: true
          replacesArtifacts: true
          artifacts: "pylint.svg"
          token: ${{ secrets.GITHUB_TOKEN }}
